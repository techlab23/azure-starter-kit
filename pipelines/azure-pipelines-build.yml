# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
    - main
    - dev

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '2a05444f-fda5-4d00-88c1-3b4ecffd4178'

  # Function app dev
  functionAppName: 'azure-starter-functions'
 
  # Environment dev
  environmentName: 'azure-starter-functions'
 
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        cd functions
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Build azure functions'
    
    - script: |
        cd website
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Build static site'
      
    - task: ArchiveFiles@2
      displayName: 'Archive function files'
      inputs:
        rootFolderOrFile: 'functions'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-functions.zip
        replaceExistingArchive: true
        verbose: true
  
    - task: ArchiveFiles@2
      displayName: 'Archive website files'
      inputs:
        rootFolderOrFile: 'website/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-web.zip'
        replaceExistingArchive: true
        verbose: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish archive'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'